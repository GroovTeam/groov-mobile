// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Comment /> renders properly 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "flex-start",
        "display": "flex",
        "justifyContent": "flex-start",
      },
      Object {
        "flexDirection": "column",
      },
      Object {
        "marginBottom": 20,
      },
    ]
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "flex-start",
            "display": "flex",
            "justifyContent": "flex-start",
          },
          Object {
            "flexDirection": "row",
          },
          Object {
            "marginBottom": 5,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "color": "rgb(0,0,0)",
            "fontSize": 25,
            "fontWeight": "100",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "rgb(0,0,0)",
              "fontSize": 13,
              "fontWeight": "bold",
            }
          }
        >
          @undefined
        </Text>
        <Text
          style={
            Object {
              "padding": 5,
              "paddingBottom": 0,
            }
          }
        />
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 5,
        }
      }
    >
      <Modal
        animationType="slide"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "height": 1334,
              "opacity": 1,
              "width": 750,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
                "marginTop": 22,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "white",
                    "borderRadius": 20,
                    "elevation": 5,
                    "margin": 20,
                    "padding": 35,
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 0.25,
                    "shadowRadius": 4,
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Object {
                    "marginBottom": 25,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "alignSelf": "center",
                      "fontSize": 25,
                    }
                  }
                >
                  Reply
                </Text>
                <TextInput
                  allowFontScaling={true}
                  multiline={true}
                  onChangeText={[Function]}
                  rejectResponderTermination={true}
                  style={
                    Array [
                      Object {
                        "borderBottomWidth": 1,
                        "borderColor": "black",
                        "borderRadius": 15,
                        "padding": 10,
                        "width": 375,
                      },
                      Object {
                        "borderWidth": 1,
                      },
                      Object {
                        "marginTop": 15,
                      },
                    ]
                  }
                  underlineColorAndroid="transparent"
                  value=""
                />
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "backgroundColor": "#2196F3",
                    "borderRadius": 20,
                    "elevation": 2,
                    "opacity": 1,
                    "padding": 10,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "white",
                      "fontWeight": "bold",
                      "textAlign": "center",
                    }
                  }
                >
                  Post
                </Text>
              </View>
            </View>
          </View>
        </View>
      </Modal>
      <View
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "center",
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginBottom": 5,
              "opacity": 1,
            }
          }
          testID="button"
        >
          <Text />
        </View>
        <Text
          style={
            Object {
              "fontSize": 15,
              "fontWeight": "200",
              "marginLeft": 1,
            }
          }
        >
          0
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text />
      </View>
    </View>
  </View>
  <View
    pointerEvents="none"
    style={
      Object {
        "height": 0,
        "overflow": "hidden",
      }
    }
  >
    <View
      forwardedRef={[Function]}
      onLayout={[Function]}
      style={Object {}}
    >
      <RCTScrollView
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View />
      </RCTScrollView>
    </View>
  </View>
</View>
`;
